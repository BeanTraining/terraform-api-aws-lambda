name: Main

on: push

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - uses: actions/checkout@v2
      - run: cargo fmt --all -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - uses: actions/checkout@v2
      - run: cargo clippy --all-targets -- -D clippy::all

  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - run: cargo check --all

  test:
    needs: [codestyle, lint, compile]
    runs-on: ubuntu-latest
    steps:
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: cargo test
  # deploy on pushes to master branch
  # assumes aws credentials (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY) are set in github secrets
  push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and Push
        if: env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #STAGE: prod
        run: |
          npm install
          npx serverless package
          aws s3 cp target/lambda/release/hello.zip s3://479284709538-us-west-2-aws-lambda/terraform-api/latest/hello.zip
          aws s3 cp target/lambda/release/world.zip s3://479284709538-us-west-2-aws-lambda/terraform-api/latest/world.zip
          aws s3 cp target/lambda/release/world.zip s3://479284709538-us-west-2-aws-lambda/terraform-api/latest/notification.zip
#         aws s3 rm --recursive s3://479284709538-us-west-2-aws-lambda/terraform-api/latest